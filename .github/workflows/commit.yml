name: Test architecture matrix
run-name: ${{ github.actor }} is doing a develop build

#        arch: [armv6l, armv7l, aarch64]
#        - arch: armv6l
#          cpu: arm1176
#          base_image: raspios_lite:latest
#          cpu_info: cpuinfo/raspberrypi_zero_w

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [armv7l, aarch64]
        include:
        - arch: armv7l
          cpu: cortex-a7
          base_image: raspios_lite:latest
          cpu_info: cpuinfo/raspberrypi_3b
        - arch: aarch64
          cpu: cortex-a53
          base_image: raspios_lite_arm64:latest
          cpu_info: cpuinfo/raspberrypi_zero2_w_arm64
    steps:
    - uses: pguyot/arm-runner-action@v2
      with:
        base_image: ${{ matrix.base_image }}
        cpu: ${{ matrix.cpu }}
        cpu_info: ${{ matrix.cpu_info }}
        commands: |
            test `uname -m` = ${{Â matrix.arch }}
            grep Model /proc/cpuinfo
            #
            echo "uname -m: $(uname -m)"
            echo "uname -r: $(uname -r)"
            echo "uname -a: $(uname -a)"
            #
            export OPT_BUILD_DIR=/sandbox/herctest
            export OPT_INSTALL_DIR="/usr/local"
            #
            export SCRIPT_DIR=/sandbox/hercules-helper
            export OPT_REGINA_DIR="Regina-REXX-3.6"
            export OPT_REGINA_TARFILE="Regina-REXX-3.6.tar.gz"
            export OPT_REGINA_URL="http://www.wrljet.com/ibm360/Regina-REXX-3.6.tar.gz"
            export GIT_REPO_HERCULES="https://github.com/SDL-Hercules-390/hyperion.git"
            export GIT_BRANCH_HERCULES="develop"
            export GIT_COMMIT_HERCULES=""
            export GIT_REPO_EXTPKGS="https://github.com/SDL-Hercules-390"
            export GIT_BRANCH_EXTPKGS=""
            #
            # reports: /sandbox
            pwd
            #
            sudo apt-get install -y git wget time ncat
            sudo apt-get install -y build-essential
            sudo apt-get install -y cmake autoconf automake flex gawk m4
            sudo apt-get install -y libltdl-dev libtool-bin libcap2-bin libbz2-dev zlib1g-dev
            #
            # Clone Hercules-Helper
            git clone https://github.com/wrljet/hercules-helper.git
            ls -l
            #
            mkdir -p $OPT_INSTALL_DIR
            mkdir -p $OPT_BUILD_DIR/hyperion
            cd $OPT_BUILD_DIR
            rm -rf hyperion || true
            #
            which rexx && true
            #export OPT_REGINA_URL="http://www.wrljet.com/ibm360/Regina-REXX-3.6.tar.gz"
            #export OPT_REGINA_TARFILE="Regina-REXX-3.6.tar.gz"
            #export OPT_REGINA_DIR="Regina-REXX-3.6"
            wget $OPT_REGINA_URL
            tar xfz "$OPT_REGINA_TARFILE"
            pwd
            # pushd $OPT_REGINA_DIR
            cd $OPT_REGINA_DIR
            #
            echo "Patching Regina 3.6 source for aarch64"
            patch -u configure -i "$SCRIPT_DIR/patches/regina-rexx-3.6.patch"
            echo "Replacing config.{guess,sub}"
            cp "$SCRIPT_DIR/patches/config.guess" ./common/
            cp "$SCRIPT_DIR/patches/config.sub" ./common/
            #
            ./configure --libdir=/usr/lib
            ./config.status --config
            make
            sudo make install
            #popd
            cd -
            #
            ldconfig
            echo "Files:"
            which rexx
            find /usr/local/include -name 'rexx*.h' 2>&1
            #
            # git clone required repos
            cd $OPT_BUILD_DIR
            rm -rf hyperion || true
            git clone -b $GIT_BRANCH_HERCULES $GIT_REPO_HERCULES
            #
            cd $OPT_BUILD_DIR
            rm -rf extpkgs
            mkdir extpkgs
            cd extpkgs/
            rm -rf *
            git clone $GIT_REPO_EXTPKGS/crypto
            git clone $GIT_REPO_EXTPKGS/decNumber
            git clone $GIT_REPO_EXTPKGS/SoftFloat
            git clone $GIT_REPO_EXTPKGS/telnet
            #
            cd $OPT_BUILD_DIR/hyperion
            #
            # Check program versions
            util/bldlvlck
            #
            # Prepare and build extpkgs
            cd $OPT_BUILD_DIR/extpkgs
            rm -rf lib/
            #
            mkdir -p build/crypto64.Release
            cd build/crypto64.Release
            rm -f CMakeCache.txt
            cmake -D INSTALL_PREFIX=$OPT_BUILD_DIR/../extpkgs -DLIB_INSTALL_DIR=lib/aarch64 $OPT_BUILD_DIR/../extpkgs/crypto
            make clean
            make -j 4 all
            make install
            cd -
            #
            mkdir -p build/decNumber64.Release
            cd build/decNumber64.Release
            rm -f CMakeCache.txt
            cmake -D INSTALL_PREFIX=$OPT_BUILD_DIR/../extpkgs -DLIB_INSTALL_DIR=lib/aarch64 $OPT_BUILD_DIR/../extpkgs/decNumber
            make clean
            make -j 4 all
            make install
            cd -
            #
            mkdir -p build/SoftFloat64.Release
            cd build/SoftFloat64.Release
            rm -f CMakeCache.txt
            cmake -D INSTALL_PREFIX=$OPT_BUILD_DIR/../extpkgs -DLIB_INSTALL_DIR=lib/aarch64 $OPT_BUILD_DIR/../extpkgs/SoftFloat
            make clean
            make -j 4 all
            make install
            cd -
            #
            mkdir -p build/telnet64.Release
            cd build/telnet64.Release
            rm -f CMakeCache.txt
            cmake -D INSTALL_PREFIX=$OPT_BUILD_DIR/extpkgs -DLIB_INSTALL_DIR=lib/aarch64 $OPT_BUILD_DIR/../extpkgs/telnet
            make clean
            make -j 4 all
            make install
            cd -
            #
            mkdir -p $OPT_BUILD_DIR/hyperion/build
            cd $OPT_BUILD_DIR/hyperion/build
            #
            make clean
            make -j 4 all
            sudo make install

